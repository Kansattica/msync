language: cpp

git:
  depth: 5
  submodules: false

notifications:
  email: false

matrix:
  include:
  - os: linux
    dist: bionic
    compiler: gcc
    env: BUILD_ARCH=x64 CC=gcc-8 CXX=g++-8 
    addons:
      apt: g++-8 libstdc++-8-dev
  - os: linux
    dist: bionic
    compiler: clang
    env: BUILD_ARCH=x64 CC="/usr/bin/clang-7" CXX="/usr/bin/clang++-7"
    addons:
      apt: clang-7 llvm-7-dev libstdc++-8-dev
  - os: linux
    dist: bionic
    compiler: gcc
    env: CXXFLAGS="-m32" CFLAGS="-m32" BUILD_ARCH=i386 CC=gcc-8 CXX=g++-8
    addons:
      apt: 
        - g++-8
        - gcc-8-multilib
        - g++-8-multilib 
        - libstdc++-8-dev-i386-cross
        - libcurl4-openssl-dev:i386
        - linux-libc-dev:i386
        - libstdc++-8-dev
  - os: osx
    osx_image: xcode11
    compiler: clang
    addons:
      homebrew:
        packages:
        - coreutils
  - os: windows
    compiler: cl64.exe
    env: CMAKE_GENERATOR="Visual Studio 15 2017" CMAKE_GENERATOR_PLATFORM=x64
  - os: windows
    compiler: cl32.exe
    env: CMAKE_GENERATOR="Visual Studio 15 2017" CMAKE_GENERATOR_PLATFORM=win32
  - os: osx
    osx_image: xcode11
    compiler: clang
    env: CONFIGURE_ARGUMENTS="-DMSYNC_USER_CONFIG=ON -DMSYNC_FILE_LOG=OFF"
  - os: windows
    compiler: cl64.exe
    env: CMAKE_GENERATOR="Visual Studio 15 2017" CMAKE_GENERATOR_PLATFORM=x64 CONFIGURE_ARGUMENTS="-DMSYNC_USER_CONFIG=ON -DMSYNC_FILE_LOG=OFF"
  - os: windows
    compiler: cl32.exe
    env: CMAKE_GENERATOR="Visual Studio 15 2017" CMAKE_GENERATOR_PLATFORM=win32 CONFIGURE_ARGUMENTS="-DMSYNC_USER_CONFIG=ON -DMSYNC_FILE_LOG=OFF"
  - os: linux
    dist: bionic
    compiler: gcc
    env: BUILD_ARCH=x64 CC=gcc-8 CXX=g++-8 CONFIGURE_ARGUMENTS="-DMSYNC_USER_CONFIG=ON -DMSYNC_FILE_LOG=OFF" MAKE_DEB=TRUE
    addons:
      apt: g++-8 libstdc++-8-dev

script:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then greadlink -m './coolðŸ¦¨zone'; fi
  - export BUILDTYPE=Release 
  - mkdir -p build
  - cd build
  - cmake --version
  - cmake -DCMAKE_BUILD_TYPE=$BUILDTYPE $CONFIGURE_ARGUMENTS ..
  - cmake --build . --config $BUILDTYPE --parallel 2
  - if [ "$MAKE_DEB" = "TRUE" ]; then cpack; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then EXELOCATION="./$BUILDTYPE/msync.exe"; else EXELOCATION="./msync"; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then strip --strip-unneeded $EXELOCATION; fi
  - $EXELOCATION version
  - $EXELOCATION yeehaw
  - $EXELOCATION location -v
  # Basically, Travis will time out if it doesn't get any output for over ten minutes.
  # Usually, this is fine, but it causes problems because OSX produces binaries that
  # run much slower for some reason.
  - travis_wait ctest --output-on-failure --schedule-random -j 2

after_success:
  - du -h $EXELOCATION
  - export FINISHED_BINARY_NAME=msync-$TRAVIS_TAG-
  - if [[ $CONFIGURE_ARGUMENTS == *"MSYNC_USER_CONFIG=ON"* ]]; then FINISHED_BINARY_NAME+="install-"; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then FINISHED_BINARY_NAME+="linux-$BUILD_ARCH-$TRAVIS_COMPILER"; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then FINISHED_BINARY_NAME+="windows-$CMAKE_GENERATOR_PLATFORM.exe"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then FINISHED_BINARY_NAME+="osx-x64"; fi
  - echo $FINISHED_BINARY_NAME
  - mv $EXELOCATION $FINISHED_BINARY_NAME

before_deploy:
  - git tag -l --format='%(contents)' $TRAVIS_TAG > msync_release_notes

deploy:
  - provider: releases
    edge: true
    file: $FINISHED_BINARY_NAME
    api_key: $API_KEY
    name: $TRAVIS_TAG
    release_notes_file: msync_release_notes
    on:
      tags: true

  - provider: releases
    edge: true
    file: '*.deb'
    api_key: $API_KEY
    name: $TRAVIS_TAG
    release_notes_file: msync_release_notes
    on:
      tags: true
      condition: $MAKE_DEB = "TRUE"
