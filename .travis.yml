language: cpp
matrix:
  include:
  - os: linux
    dist: bionic
    compiler: gcc
    env: BUILD_ARCH=x64 CC=gcc-8 CXX=g++-8 
    addons:
      apt: g++-8 libstdc++-8-dev
  - os: linux
    dist: bionic
    compiler: clang
    env: BUILD_ARCH=x64 CC="/usr/bin/clang-7" CXX="/usr/bin/clang++-7"
    addons:
      apt: clang-7 llvm-7-dev libstdc++-8-dev
  - os: osx
    compiler: clang
    env: LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib" CPPFLAGS="-I/usr/local/opt/llvm/include" PATH="/usr/local/opt/llvm/bin:$PATH"
    addons: # llvm is needed because it provides an updated version of the standard library needed to run the tests and std::optional
      homebrew: # the update is because the osx image won't work without it.
        packages: 
          - llvm
        update: true
  - os: linux
    dist: bionic
    compiler: gcc
    env: CXXFLAGS="-m32" CFLAGS="-m32" BUILD_ARCH=i386 CC=gcc-8 CXX=g++-8
    addons:
      apt: 
        - g++-8
        - gcc-8-multilib
        - g++-8-multilib 
        - libstdc++-8-dev-i386-cross
        - libcurl4-openssl-dev:i386
        - linux-libc-dev:i386
        - libstdc++-8-dev
  - os: windows
    compiler: cl64.exe
    env: CMAKE_GENERATOR="Visual Studio 15 2017" CMAKE_GENERATOR_PLATFORM=x64
  - os: windows
    compiler: cl32.exe
    env: CMAKE_GENERATOR="Visual Studio 15 2017" CMAKE_GENERATOR_PLATFORM=win32

script:
  - export VERBOSE=1 BUILDTYPE=Release
  - mkdir -p build
  - cd build
  - cmake --version
  - cmake -DCMAKE_BUILD_TYPE=$BUILDTYPE .. 
  - cmake --build . --config $BUILDTYPE --parallel
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then EXELOCATION="./$BUILDTYPE/msync.exe"; else EXELOCATION="./msync"; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then TESTLOCATION="./tests/$BUILDTYPE/tests.exe"; else TESTLOCATION="./tests/tests"; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then NETTESTLOCATION="./tests/$BUILDTYPE/net_tests.exe"; else NETTESTLOCATION="./tests/net_tests"; fi
  - $EXELOCATION version
  - $EXELOCATION yeehaw
  - $NETTESTLOCATION
  - $TESTLOCATION ~[long_run]
  - $TESTLOCATION [long_run_outgoingpost]
  # Basically, Travis will time out if it doesn't get any output for over ten minutes.
  # Usually, this is fine, but it causes problems because OSX produces binaries that
  # run much slower for some reason.
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then ( ( sleep 540 && echo "I'm still testing, Travis. Don't worry." ) & ) ; fi
  - time $TESTLOCATION [long_run_parseopts]

after_success:
  - echo "Binary size:"
  - du -h $EXELOCATION
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then FINISHED_BINARY_NAME="msync-$TRAVIS_TAG-linux-$BUILD_ARCH-$TRAVIS_COMPILER"; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then FINISHED_BINARY_NAME="msync-$TRAVIS_TAG-windows-$CMAKE_GENERATOR_PLATFORM.exe"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then FINISHED_BINARY_NAME="msync-$TRAVIS_TAG-osx-x64"; fi
  - echo $FINISHED_BINARY_NAME
  - mv $EXELOCATION $FINISHED_BINARY_NAME

deploy:
  provider: releases
  skip_cleanup: true
  draft: true
  file: $FINISHED_BINARY_NAME
  api_key: $API_KEY
  on:
    tags: true
